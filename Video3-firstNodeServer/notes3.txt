HOW DNS WORKS

DNS (domain name service)

1.Domain Name Entry : user types a domain (e.g.,www.google.com) into a browser.
2.DNS Query : the browser sends a DNS query to resolve the domain into an IP address.
3.DNS Server : provides the correct IP address for the domain.
4.Browser Connects : the browser uses the IP to connect to the web server and loads the website.





How DNS actually works?

1. Root DNS : acts as the starting point for DNS resolution. it directs queries to the correct TLD server (e.g.,.com,.org)

2. TLD (Top Level Domain) DNS : handles queries for specific top-level domains(e.g.,.com. .net) and directs them to the authoritative DNS server (e.g., Verisign for .com , PIR for .org)

3.Authoritative DNS : contains the actual IP address of the domain and the answers DNS queries with this information (e.g., cloudflare, google DNS).






How web works? 


> Client Request Initiation: The client (browser) initiates a network call by entering a URL.

> DNS Resolution: The browser contacts a DNS server to get the IP address of the domain.

> TCP Connection: The browser establishes a TCP connection with the server's IP address.

> HTTP Request: The browser sends an HTTP request to the server.

> Server Processing: The server processes the request and prepares a response.

> HTTP Response: The server sends an HTTP response back to the client.

> Network Transmission: The response travels back to the client over the network.

> Client Receives Response: The browser receives and interprets the response.

> Rendering: The browser renders the content of the response and displays it to the user.





What are protocols ?




> Http (HyperText Transfer Protocol):

Facilitates communication between a web browser and a server to transfer web pages.

Sends data in plain text (no encryption).

Used for basic website browsing without security.



> HTTPS (HyperText Transfer Protocol Secure):

Secure version of HTTP, encrypts data for secure communication.

Uses SSL/TLS to encrypt data.

Used in online banking, e-commerce.



> TCP (Transmission Control Protocol):

Ensures reliable, ordered, and error-checked delivery over the internet.

Establishes a connection before data is transferred.






Node Core Modules

1. Built-in : core modules are included with node.js installation.
2. No installation Needed : directly available for use.
3. Performance : highly optimsed for Performance


examples :-

1.fs (File System): Handles file operations like reading and writing files.
2.http: Creates HTTP servers and makes HTTP requests.
3.https: Launch a SSL Server.
4.path: Provides utilities for handling and transforming file paths.
5.os: Provides operating system-related utility methods and properties.
6.events: Handles events and event-driven programming.
7.crypto: Provides cryptographic functionalities like hashing and encryption.
8.url: Parses and formats URL strings.





REQUIRE Keyword 

1.Purpose: import modules in Node.js
2.Caching: Modules are cached after the first require call.                             (jabtk apna code ya server chl rha h tbtk vo module whi pda rhega)
3. .js : is added automatically and is not needed to at the end of module name.
4. Path Resolution : Node.js searches for modules in core, node_modules, and file paths.
